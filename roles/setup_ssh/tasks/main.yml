---
- name: Ensure `which` is installed
  become: yes
  ansible.builtin.package:
    name:
      - which
      - openssh-clients
    state: present

- name: Deploy .ssh directory to user's home
  ansible.builtin.copy:
    src: ".ssh/"
    dest: "/home/{{ ansible_user_id }}/.ssh"
    backup: yes

- name: Ensure ssh keys have 0600 permissions
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: 0600
  loop:
    - { path: "/home/{{ ansible_user_id }}/.ssh/github_droptix_ssh_ed25519" }
    - { path: "/home/{{ ansible_user_id }}/.ssh/github_askia_ssh_ed25519" }

- name: Ensure public ssh key have 0644 permission
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: 0644
  loop:
    - {
        path: "/home/{{ ansible_user_id }}/.ssh/github_droptix_ssh_ed25519.pub",
      }
    - { path: "/home/{{ ansible_user_id }}/.ssh/github_askia_ssh_ed25519.pub" }

- name: "Set authorized keys"
  authorized_key:
    user: "{{ ansible_user_id }}"
    state: present
    key: "{{ item.key }}"
  loop:
    - {
        key: "{{ lookup('file', '/home/{{ ansible_user_id }}/.ssh/github_droptix_ssh_ed25519.pub') }}",
      }
    - {
        key: "{{ lookup('file', '/home/{{ ansible_user_id }}/.ssh/github_askia_ssh_ed25519.pub') }}",
      }

- name: Create user systemd directory
  ansible.builtin.file:
    path: "/home/{{ ansible_user_id }}/.config/systemd/user"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0755"

- name: Deploy user ssh-agent systemd service
  ansible.builtin.copy:
    src: ".config/systemd/user/ssh-agent.service"
    dest: "/home/{{ ansible_user_id }}/.config/systemd/user/"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0644"

- name: Enable user systemd service
  ansible.builtin.command:
    cmd: "{{ item.cmd }}"
  loop:
    - { cmd: "systemctl --user daemon-reload" }
    - { cmd: "systemctl --user enable ssh-agent.service" }
    - { cmd: "systemctl --user start ssh-agent.service" }

- name: Check if fish is installed
  command: which fish
  register: fish_check
  ignore_errors: yes
  changed_when: false

- name: Ensure fish configuration directory exists
  ansible.builtin.file:
    path: "/home/{{ ansible_user_id }}/.config/fish/conf.d"
    state: directory
    mode: "0755"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
  when: fish_check.rc == 0

- name: Deploy SSH_AUTH_SOCK script for fish
  ansible.builtin.copy:
    src: .config/fish/conf.d/set_ssh_auth_sock.fish
    dest: /home/{{ ansible_user_id }}/.config/fish/conf.d/set_ssh_auth_sock.fish
    mode: "0644"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
  when: fish_check.rc == 0
