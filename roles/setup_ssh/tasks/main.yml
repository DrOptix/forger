---
- name: Ensure ssh and dependencies are installed
  become: true
  ansible.builtin.package:
    name:
      - which
      - expect
    state: present

- name: Ensure ssh and dependencies are installed (RedHat)
  become: true
  ansible.builtin.package:
    name:
      - openssh
      - openssh-clients
    state: present
  when: ansible_os_family == "RedHat"

- name: Ensure ssh and dependencies are installed (Debian)
  become: true
  ansible.builtin.package:
    name:
      - openssh-client
    state: present
  when: ansible_os_family == "Debian"

- name: Ensure fish shell is installed (ArchLinux)
  become: true
  ansible.builtin.package:
    name:
      - openssh
    state: present
  when: ansible_distribution == "Archlinux"

- name: Deploy SSH settings to user's home
  ansible.builtin.copy:
    src: ".ssh/"
    dest: "/home/{{ ansible_user_id }}/.ssh"
    mode: "0700"
    backup: true

- name: Ensure SSH private keys have 0600 permissions
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: 0600
  loop:
    - { path: "/home/{{ ansible_user_id }}/.ssh/github_droptix_ssh_ed25519" }
    - { path: "/home/{{ ansible_user_id }}/.ssh/github_askia_ssh_ed25519" }

- name: Ensure SSH public key have 0644 permission
  ansible.builtin.file:
    path: "{{ item.path }}"
    mode: 0644
  loop:
    - { path: "/home/{{ ansible_user_id }}/.ssh/github_droptix_ssh_ed25519.pub", }
    - { path: "/home/{{ ansible_user_id }}/.ssh/github_askia_ssh_ed25519.pub" }

- name: "Set SSH authorized keys"
  ansible.posix.authorized_key:
    user: "{{ ansible_user_id }}"
    state: present
    key: "{{ item.key }}"
  loop:
    - { key: "{{ lookup('file', '/home/{{ ansible_user_id }}/.ssh/github_droptix_ssh_ed25519.pub') }}", }
    - { key: "{{ lookup('file', '/home/{{ ansible_user_id }}/.ssh/github_askia_ssh_ed25519.pub') }}", }

- name: Add SSH keys for known hosts
  ansible.builtin.known_hosts:
    name: "{{ item.host }}"
    key: "{{ lookup('pipe', 'ssh-keyscan -H {{ item.host }}') }}"
  loop:
    - { host: "github.com" }
    - { host: "apartment27.home.ro" }

- name: Deploy `ssh_agent.fish` to user's home
  ansible.builtin.copy:
    src: .config/fish/conf.d/ssh_agent.fish
    dest: "/home/{{ ansible_user_id }}/.config/fish/conf.d/"

- name: Ensure `ssh_agent.fish` has 0644 permission
  ansible.builtin.file:
    path: "/home/{{ ansible_user_id }}/.config/fish/conf.d/ssh_agent.fish"
    mode: 0644
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"

- name: Start `ssh-agent` and capture the output
  ansible.builtin.shell: |
    eval $(ssh-agent -s -a "/home/{{ ansible_user_id }}/.ssh/ssh_agent.socket")
    echo SSH_AUTH_SOCK="$SSH_AUTH_SOCK"
    echo SSH_AGENT_PID="$SSH_AGENT_PID"
  register: ssh_agent_output

- name: Capture `SSH_AUTH_SOCK`
  ansible.builtin.set_fact:
    ssh_auth_sock: "{{ item.split('=')[1] }}"
  loop: "{{ ssh_agent_output.stdout_lines }}"
  when: "'SSH_AUTH_SOCK' in item"

- name: Capture `SSH_AGENT_PID`
  ansible.builtin.set_fact:
    ssh_agent_pid: "{{ item.split('=')[1] }}"
  loop: "{{ ssh_agent_output.stdout_lines }}"
  when: "'SSH_AGENT_PID' in item"

- name: Add private keys to `ssh-agent`
  environment:
    SSH_AUTH_SOCK: "{{ ssh_auth_sock }}"
    SSH_AGENT_PID: "{{ ssh_agent_pid }}"
  ansible.builtin.shell: |
    "{{ playbook_dir }}/../roles/setup_ssh/scripts/add_key.sh" {{ item }}
  args:
    executable: /usr/bin/bash
  loop:
    - "/home/{{ ansible_user_id }}/.ssh/github_droptix_ssh_ed25519"
    - "/home/{{ ansible_user_id }}/.ssh/github_askia_ssh_ed25519"
  no_log: true
